// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ActionAction string

const (
	ActionActionSynchronize                 ActionAction = "SYNCHRONIZE"
	ActionActionCleanAndSynchronize         ActionAction = "CLEAN_AND_SYNCHRONIZE"
	ActionActionDifferentialSynchronization ActionAction = "DIFFERENTIAL_SYNCHRONIZATION"
	ActionActionStop                        ActionAction = "STOP"
)

func (e ActionAction) ToPointer() *ActionAction {
	return &e
}

func (e *ActionAction) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SYNCHRONIZE":
		fallthrough
	case "CLEAN_AND_SYNCHRONIZE":
		fallthrough
	case "DIFFERENTIAL_SYNCHRONIZATION":
		fallthrough
	case "STOP":
		*e = ActionAction(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionAction: %v", v)
	}
}

// Action - An input object to creating a SynchronizationAction
type Action struct {
	Action *ActionAction `json:"action,omitempty"`
}
